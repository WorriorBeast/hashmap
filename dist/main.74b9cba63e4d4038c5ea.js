(()=>{"use strict";class e{constructor(e){this.key=e,this.next=null}}class t{constructor(){this.head=null}append(t){if(null==this.head)this.head=new e(t);else{let s=this.head;for(;s.next;)s=s.next;s.next=new e(t)}}prepend(t){let s=new e(t);s.next=this.head,this.head=s}size(){let e=1,t=this.head;if(null==this.head)return 0;for(;t.next;)t=t.next,e++;return e}firstNode(){return this.head}tail(){let e=this.head;for(;e.next;)e=e.next;return e}at(e){if(e<=0)return null;let t=this.head;for(let s=1;s<e;s++){if(null==t.next)return null;t=t.next}return t}pop(){let e=this.head;for(;e&&null!=e.next.next;)e=e.next;e.next=null}containsKey(e){let t=this.head;for(;t.next;){if(t.key===e)return!0;t=t.next}return!1}findNodeIndex(e){let t=this.head,s=1;for(;t;){if(t.key===e)return s;t=t.next,s++}return null}toString(){let e=this.head,t="";for(;e;)t+=`( ${e.key} ) -> `,e=e.next;return t+="null",t}insertAt(t,s){let n,i=this.head,h=1;for(null==this.head&&(this.head=new e(t));i;)if(h===s){const s=new e(t);s.next=i,n.next=s}else n=i,i=i.next,h++;n.next=new e(t)}removeAt(e){if(Number(e)<=0)return;if(1==Number(e))return void(this.head=this.head.next);let t,s=this.head,n=1;for(;s;){if(n===Number(e))return void(t.next=s.next);t=s,s=s.next,n++}}getKeys(){let e=[],t=this.head;for(;t;)e.push(t.key),t=t.next;return e}}class s{constructor(e=null,t=null,s=null){this.key=e,this.value=t,this.next=s}}class n{constructor(){this.head=null}append(e,t){if(null==this.head)this.head=new s(e,t);else{let n=this.head;for(;n.next;)n=n.next;n.next=new s(e,t)}}prepend(e,t){let n=new s(e,t);n.next=this.head,this.head=n}size(){let e=1,t=this.head;if(null==this.head)return 0;for(;t.next;)t=t.next,e++;return e}firstNode(){return this.head}tail(){let e=this.head;for(;e.next;)e=e.next;return e}at(e){if(e<=0)return null;let t=this.head;for(let s=1;s<e;s++){if(null==t.next)return null;t=t.next}return t}pop(){let e=this.head;for(;e&&null!=e.next.next;)e=e.next;e.next=null}containsKey(e){let t=this.head;for(;t.next;){if(t.key===e)return!0;t=t.next}return!1}findNodeIndex(e){let t=this.head,s=1;for(;t;){if(t.key===e)return s;t=t.next,s++}return null}toString(){let e=this.head,t="";for(;e;)t+=`( ${e.key}, ${e.value} ) -> `,e=e.next;return t+="null",t}insertAt(e,t,n){let i,h=this.head,r=1;for(null==this.head&&(this.head=new s(e,t));h;)if(r===n){const n=new s(e,t);n.next=h,i.next=n}else i=h,h=h.next,r++;i.next=new s(t)}removeAt(e){if(Number(e)<=0)return;if(1==Number(e))return void(this.head=this.head.next);let t,s=this.head,n=1;for(;s;){if(n===Number(e))return void(t.next=s.next);t=s,s=s.next,n++}}getKeys(){let e=[],t=this.head;for(;t;)e.push(t.key),t=t.next;return e}getValues(){let e=[],t=this.head;for(;t;)e.push(t.value),t=t.next;return e}getKeyValues(){let e=[],t=this.head;for(;t;)e.push([t.key,t.value]),t=t.next;return e}}const i=new class{constructor(){this.capacity=16,this.loadFactor=.75,this.buckets=new Array(this.capacity),this.size=0}hash(e){let t=0;for(let s=0;s<e.length;s++)t=(31*t+e.charCodeAt(s))%this.capacity;return t}set(e,t){if(0===e.length)return;if(this.size/this.capacity>=this.loadFactor){const e=this.entries(),t=0,s=1;this.capacity*=2,this.buckets=new Array(this.capacity),this.size=0,e.forEach((e=>this.set(e[t],e[s])))}const s=this.hash(e);if(this.buckets[s])if(this.buckets[s].head){const n=this.buckets[s].findNodeIndex(e),i=this.buckets[s].at(n);i.key===e?i.value=t:(this.buckets[s].append(e,t),this.size++)}else{const i=new n,h=Object.entries(this.buckets[s])[0],r=0,a=1;e===h[r]?this.buckets[s][e]=t:(i.append(h[r],h[a]),i.append(e,t),this.buckets[s]=i,this.size++)}else this.buckets[s]={[e]:t},this.size++}get(e){if(0===e.length)return null;const t=this.hash(e),s=this.buckets[t];if(s){if(s.head){const t=s.findNodeIndex(e),n=s.at(t);return n.key===e?n.value:null}return e==Object.keys(s)[0]?s[e]:null}return null}has(e){if(0===e.length)return!1;const t=this.hash(e);let s=this.buckets[t];return!!s&&(s.head?s.containsKey(e):e==Object.keys(s)[0])}remove(e){if(0===e.length)return;const t=this.hash(e);if(this.buckets[t]){if(this.buckets[t].head){const s=this.buckets[t].findNodeIndex(e);return!!s&&(this.buckets[t].removeAt(s),this.size--,!0)}return e==Object.keys(this.buckets[t])[0]&&(this.buckets[t]=void 0,this.size--,!0)}return!1}length(){return this.size}clear(){this.capacity=16,this.buckets=new Array(this.capacity),this.size=0}keys(){const e=this.capacity;let t=[];for(let s=0;s<e;s++){const e=this.buckets[s];e&&(e.head?t.push(...e.getKeys()):t.push(Object.keys(e)[0]))}return t}values(){const e=this.capacity;let t=[];for(let s=0;s<e;s++){const e=this.buckets[s];e&&(e.head?t.push(...e.getValues()):t.push(Object.values(e)[0]))}return t}entries(){const e=this.capacity;let t=[];for(let s=0;s<e;s++){const e=this.buckets[s];e&&(e.head?t.push(...e.getKeyValues()):t.push(Object.entries(e)[0]))}return t}};i.set("apple","red"),i.set("banana","yellow"),i.set("carrot","orange"),i.set("dog","brown"),i.set("elephant","gray"),i.set("frog","green"),i.set("grape","purple"),i.set("hat","black"),i.set("ice cream","white"),i.set("jacket","blue"),i.set("kite","pink"),i.set("lion","golden"),i.set("jet","green"),i.set("mouse trap","yellow"),i.set("ice cream","chocolate"),i.set("dog","white"),i.set("grape","green"),console.log(i.buckets);const h=new class{constructor(){this.capacity=16,this.loadFactor=.75,this.buckets=new Array(this.capacity),this.size=0}hash(e){let t=0;for(let s=0;s<e.length;s++)t=(31*t+e.charCodeAt(s))%this.capacity;return t}set(e){if(0===e.length)return;if(this.size/this.capacity>=this.loadFactor){const e=this.keys();this.capacity*=2,this.buckets=new Array(this.capacity),this.size=0,e.forEach((e=>this.set(e)))}const s=this.hash(e);if(this.buckets[s])if(this.buckets[s].head){if(this.buckets[s].containsKey(e))return;this.buckets[s].append(e),this.size++}else{if(e===this.buckets[s])return;const n=new t;n.append(this.buckets[s]),n.append(e),this.buckets[s]=n,this.size++}else this.buckets[s]=e,this.size++}get(e){if(0===e.length)return null;const t=this.hash(e),s=this.buckets[t];return s?s.head?s.containsKey(e)?e:null:e==s?s:null:null}has(e){if(0===e.length)return!1;const t=this.hash(e),s=this.buckets[t];return!!s&&(s.head?s.containsKey(e):e===s)}remove(e){if(0===e.length)return;const t=this.hash(e);if(this.buckets[t]){if(this.buckets[t].head){const s=this.buckets[t].findNodeIndex(e);return!!s&&(this.buckets[t].removeAt(s),this.size--,!0)}return e===this.buckets[t]&&(this.buckets[t]=void 0,this.size--,!0)}return!1}length(){return this.size}clear(){this.capacity=16,this.buckets=new Array(this.capacity),this.size=0}keys(){const e=this.capacity;let t=[];for(let s=0;s<e;s++){const e=this.buckets[s];e&&(e.head?t.push(...e.getKeys()):t.push(e))}return t}};h.set("apple","red"),h.set("banana","yellow"),h.set("carrot","orange"),h.set("dog","brown"),h.set("elephant","gray"),h.set("frog","green"),h.set("grape","purple"),h.set("hat","black"),h.set("ice cream","white"),h.set("jacket","blue"),h.set("kite","pink"),h.set("lion","golden"),h.set("jet","green"),h.set("mouse trap","yellow"),console.log(h.buckets)})();
//# sourceMappingURL=main.74b9cba63e4d4038c5ea.js.map